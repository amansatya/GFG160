//QUESTION 1
class Solution {
  public:
    bool hasTripletSum(vector<int> &arr, int t) 
    {
        int n=arr.size();
        sort(arr.begin(),arr.end());
        for(int i=0;i<n;i++)
        {
            int j=i+1,k=n-1;
            while(j<k)
            {
                int s=arr[i]+arr[j]+arr[k];
                if(s<t)
                    j++;
                else if(s>t)
                    k--;
                else 
                    return true;
            }
        }
        return false;
    }
};

//QUESTION 3
class Solution {
  public:
    vector<vector<int> > fourSum(vector<int> &arr, int t) 
    {
        int n=arr.size();
        sort(arr.begin(),arr.end());
        vector<vector<int>> ans;
        for(int i=0;i<n;i++)
        {
            while(i>0&&arr[i]==arr[i-1])
                    i++;
            for(int j=i+1;j<n;j++)
            {
                while(j>i+1&&arr[j]==arr[j-1])
                    j++;
                int k=j+1,l=n-1;
                while(k<l)
                {
                    long long s=(long long)(arr[i]+arr[j]+arr[k]+arr[l]);
                    if(s<t)
                        k++;
                    else if(s>t)
                        l--;
                    else 
                    {
                        ans.push_back({arr[i],arr[j],arr[k],arr[l]});
                        k++;
                        l--;
                        while(k<l&&arr[k]==arr[k-1])
                            k++;
                        while(k<l&&arr[l]==arr[l+1])
                            l--;
                    }
                }
            }
        }
        return ans;
    }
};
